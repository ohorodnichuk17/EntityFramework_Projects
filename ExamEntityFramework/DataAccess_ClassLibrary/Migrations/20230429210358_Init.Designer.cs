// <auto-generated />
using System;
using ExamEntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess_ClassLibrary.Migrations
{
    [DbContext(typeof(BooksDbContext))]
    [Migration("20230429210358_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ExamEntityFramework.Entities.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            AuthorId = 1,
                            Name = "Edward",
                            Surname = "Sweeney"
                        },
                        new
                        {
                            AuthorId = 2,
                            Name = "Elodie",
                            Surname = "Richardson"
                        },
                        new
                        {
                            AuthorId = 3,
                            Name = "Harley",
                            Surname = "Bloggs"
                        },
                        new
                        {
                            AuthorId = 4,
                            Name = "Saba",
                            Surname = "Vaughan"
                        },
                        new
                        {
                            AuthorId = 5,
                            Name = "Ada",
                            Surname = "Hahn"
                        },
                        new
                        {
                            AuthorId = 6,
                            Name = "Christine",
                            Surname = "Kirby"
                        });
                });

            modelBuilder.Entity("ExamEntityFramework.Entities.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AmountOfPages")
                        .HasColumnType("int");

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("BookName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<double>("PriceToSell")
                        .HasColumnType("float");

                    b.Property<int>("PublishingId")
                        .HasColumnType("int");

                    b.Property<int>("PublishingYear")
                        .HasColumnType("int");

                    b.HasKey("BookId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            AmountOfPages = 382,
                            AuthorId = 3,
                            BookName = "Warrior Of The Curse",
                            Cost = 299.0,
                            GenreId = 4,
                            PriceToSell = 400.0,
                            PublishingId = 2,
                            PublishingYear = 2023
                        },
                        new
                        {
                            BookId = 2,
                            AmountOfPages = 572,
                            AuthorId = 5,
                            BookName = "Man Of The Eternal",
                            Cost = 100.0,
                            GenreId = 2,
                            PriceToSell = 300.0,
                            PublishingId = 1,
                            PublishingYear = 2019
                        },
                        new
                        {
                            BookId = 3,
                            AmountOfPages = 493,
                            AuthorId = 1,
                            BookName = "Witches Of The Ancients",
                            Cost = 699.0,
                            GenreId = 5,
                            PriceToSell = 1200.0,
                            PublishingId = 3,
                            PublishingYear = 2020
                        },
                        new
                        {
                            BookId = 4,
                            AmountOfPages = 395,
                            AuthorId = 2,
                            BookName = "Girls Of Hell",
                            Cost = 1099.0,
                            GenreId = 1,
                            PriceToSell = 1698.0,
                            PublishingId = 1,
                            PublishingYear = 2017
                        },
                        new
                        {
                            BookId = 5,
                            AmountOfPages = 739,
                            AuthorId = 6,
                            BookName = "Foes And Gangsters",
                            Cost = 399.0,
                            GenreId = 3,
                            PriceToSell = 490.0,
                            PublishingId = 3,
                            PublishingYear = 2005
                        },
                        new
                        {
                            BookId = 6,
                            AmountOfPages = 728,
                            AuthorId = 1,
                            BookName = "Foes And Cats",
                            Cost = 305.0,
                            GenreId = 5,
                            PriceToSell = 604.0,
                            PublishingId = 2,
                            PublishingYear = 2021
                        },
                        new
                        {
                            BookId = 7,
                            AmountOfPages = 253,
                            AuthorId = 2,
                            BookName = "Choice With Gold",
                            Cost = 302.0,
                            GenreId = 1,
                            PriceToSell = 492.0,
                            PublishingId = 1,
                            PublishingYear = 2016
                        },
                        new
                        {
                            BookId = 8,
                            AmountOfPages = 525,
                            AuthorId = 4,
                            BookName = "Means Without Courage",
                            Cost = 820.0,
                            GenreId = 2,
                            PriceToSell = 972.0,
                            PublishingId = 3,
                            PublishingYear = 2023
                        });
                });

            modelBuilder.Entity("ExamEntityFramework.Entities.Credential", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ClientId");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            ClientId = 1,
                            Login = "sullen",
                            Password = "KBSkNeKu"
                        },
                        new
                        {
                            ClientId = 2,
                            Login = "real",
                            Password = "GLmATFfF"
                        },
                        new
                        {
                            ClientId = 3,
                            Login = "immediate",
                            Password = "g9H4r6pC"
                        },
                        new
                        {
                            ClientId = 4,
                            Login = "blackbird",
                            Password = "eaxH9cMk"
                        },
                        new
                        {
                            ClientId = 5,
                            Login = "grapefruit",
                            Password = "xvMhDaqK"
                        },
                        new
                        {
                            ClientId = 6,
                            Login = "trice",
                            Password = "Wh5XRHzu"
                        },
                        new
                        {
                            ClientId = 7,
                            Login = "edge",
                            Password = "xvMhDaqK"
                        },
                        new
                        {
                            ClientId = 8,
                            Login = "taco",
                            Password = ""
                        },
                        new
                        {
                            ClientId = 9,
                            Login = "bale",
                            Password = ""
                        },
                        new
                        {
                            ClientId = 10,
                            Login = "tacit",
                            Password = "BWGncz5f"
                        });
                });

            modelBuilder.Entity("ExamEntityFramework.Entities.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GenreName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("GenreId");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            GenreId = 1,
                            GenreName = "Fantasy"
                        },
                        new
                        {
                            GenreId = 2,
                            GenreName = "Mystery"
                        },
                        new
                        {
                            GenreId = 3,
                            GenreName = "Romance"
                        },
                        new
                        {
                            GenreId = 4,
                            GenreName = "Westerns"
                        },
                        new
                        {
                            GenreId = 5,
                            GenreName = "Dystopian"
                        });
                });

            modelBuilder.Entity("ExamEntityFramework.Entities.Promotion", b =>
                {
                    b.Property<int>("PromotionsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<string>("PromotionsName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PromotionsId");

                    b.ToTable("Promotions");

                    b.HasData(
                        new
                        {
                            PromotionsId = 1,
                            Discount = 94.0,
                            PromotionsName = "Chrome book shop"
                        },
                        new
                        {
                            PromotionsId = 2,
                            Discount = 31.0,
                            PromotionsName = "Suburban book shop"
                        },
                        new
                        {
                            PromotionsId = 3,
                            Discount = 75.0,
                            PromotionsName = "Viral book shop"
                        },
                        new
                        {
                            PromotionsId = 4,
                            Discount = 294.0,
                            PromotionsName = "Wonderland book shop"
                        },
                        new
                        {
                            PromotionsId = 5,
                            Discount = 12.0,
                            PromotionsName = "Mate book shop"
                        });
                });

            modelBuilder.Entity("ExamEntityFramework.Entities.Publishing", b =>
                {
                    b.Property<int>("PublishingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PublishingName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PublishingId");

                    b.ToTable("Publishings");

                    b.HasData(
                        new
                        {
                            PublishingId = 1,
                            PublishingName = "Brainy Publications"
                        },
                        new
                        {
                            PublishingId = 2,
                            PublishingName = "Ink n Paper Press"
                        },
                        new
                        {
                            PublishingId = 3,
                            PublishingName = "Wordsmith Literature"
                        });
                });

            modelBuilder.Entity("ExamEntityFramework.Entities.Sale", b =>
                {
                    b.Property<int>("SaleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("CLientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("SaleId");

                    b.ToTable("Sales");

                    b.HasData(
                        new
                        {
                            SaleId = 1,
                            Amount = 2,
                            BookId = 2,
                            CLientId = 5,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 272.0
                        },
                        new
                        {
                            SaleId = 2,
                            Amount = 8,
                            BookId = 4,
                            CLientId = 10,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 382.0
                        },
                        new
                        {
                            SaleId = 3,
                            Amount = 10,
                            BookId = 6,
                            CLientId = 2,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 135.0
                        },
                        new
                        {
                            SaleId = 4,
                            Amount = 3,
                            BookId = 8,
                            CLientId = 4,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 826.0
                        },
                        new
                        {
                            SaleId = 5,
                            Amount = 6,
                            BookId = 1,
                            CLientId = 6,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 829.0
                        },
                        new
                        {
                            SaleId = 6,
                            Amount = 4,
                            BookId = 3,
                            CLientId = 8,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 273.0
                        },
                        new
                        {
                            SaleId = 7,
                            Amount = 7,
                            BookId = 5,
                            CLientId = 1,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 627.0
                        },
                        new
                        {
                            SaleId = 8,
                            Amount = 1,
                            BookId = 7,
                            CLientId = 3,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 274.0
                        });
                });

            modelBuilder.Entity("ExamEntityFramework.Entities.Tray", b =>
                {
                    b.Property<int>("TrayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.HasKey("TrayId");

                    b.ToTable("Trays");

                    b.HasData(
                        new
                        {
                            TrayId = 1,
                            Amount = 15,
                            BookId = 2,
                            ClientId = 9
                        },
                        new
                        {
                            TrayId = 2,
                            Amount = 3,
                            BookId = 7,
                            ClientId = 2
                        },
                        new
                        {
                            TrayId = 3,
                            Amount = 1,
                            BookId = 4,
                            ClientId = 4
                        },
                        new
                        {
                            TrayId = 4,
                            Amount = 12,
                            BookId = 1,
                            ClientId = 6
                        },
                        new
                        {
                            TrayId = 5,
                            Amount = 7,
                            BookId = 6,
                            ClientId = 5
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
